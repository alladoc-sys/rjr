{"ast":null,"code":"import Axios from \"axios\";\nimport { CART_EMPTY } from \"../constants/cartConstants\";\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_FAIL, ORDER_MINE_LIST_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL } from \"../constants/orderConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    console.log(\"orderAction.js createOrder 1\");\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    console.log(\"orderAction.js createOrder 2 userInfo: \" + userInfo.name);\n    const {\n      data\n    } = await Axios.post(\"/api/orders\", order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    console.log(\"orderAction.js createOrder 3\");\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem(\"cartItems\");\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // export const detailsOrder = (orderId) => async (dispatch, getState) => {\n//   dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.get(`/api/orders/${orderId}`, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\n//   }\n// };\n// export const payOrder = (order, paymentResult) => async (\n//   dispatch,\n//   getState\n// ) => {\n//   dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_PAY_FAIL, payload: message });\n//   }\n// };\n// export const listOrderMine = () => async (dispatch, getState) => {\n//   dispatch({ type: ORDER_MINE_LIST_REQUEST });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.get(\"/api/orders/mine\", {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     });\n//     dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_MINE_LIST_FAIL, payload: message });\n//   }\n// };\n// export const listOrders = ({ seller = \"\" }) => async (dispatch, getState) => {\n//   dispatch({ type: ORDER_LIST_REQUEST });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.get(`/api/orders?seller=${seller}`, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     console.log(data);\n//     dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_LIST_FAIL, payload: message });\n//   }\n// };\n// export const deleteOrder = (orderId) => async (dispatch, getState) => {\n//   dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = Axios.delete(`/api/orders/${orderId}`, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: ORDER_DELETE_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_DELETE_FAIL, payload: message });\n//   }\n// };\n// export const deliverOrder = (orderId) => async (dispatch, getState) => {\n//   dispatch({ type: ORDER_DELIVER_REQUEST, payload: orderId });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = Axios.put(\n//       `/api/orders/${orderId}/deliver`,\n//       {},\n//       {\n//         headers: { Authorization: `Bearer ${userInfo.token}` },\n//       }\n//     );\n//     dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_DELIVER_FAIL, payload: message });\n//   }\n// };","map":{"version":3,"sources":["C:/AL_PROJECTS/JAVASCRIPT/amazonal/frontend/src/actions/orderActions.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_PAY_REQUEST","ORDER_PAY_FAIL","ORDER_PAY_SUCCESS","ORDER_MINE_LIST_REQUEST","ORDER_MINE_LIST_FAIL","ORDER_MINE_LIST_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELETE_REQUEST","ORDER_DELETE_SUCCESS","ORDER_DELETE_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","createOrder","order","dispatch","getState","type","payload","console","log","userSignin","userInfo","name","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SACEC,iBADF,EAEEC,oBAFF,EAGEC,oBAHF,EAIEC,kBAJF,EAKEC,qBALF,EAMEC,qBANF,EAOEC,iBAPF,EAQEC,cARF,EASEC,iBATF,EAUEC,uBAVF,EAWEC,oBAXF,EAYEC,uBAZF,EAaEC,kBAbF,EAcEC,kBAdF,EAeEC,eAfF,EAgBEC,oBAhBF,EAiBEC,oBAjBF,EAkBEC,iBAlBF,EAmBEC,qBAnBF,EAoBEC,qBApBF,EAqBEC,kBArBF,QAsBO,6BAtBP;AAwBA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAExB,oBAAR;AAA8ByB,IAAAA,OAAO,EAAEJ;AAAvC,GAAD,CAAR;;AACA,MAAI;AACFK,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,UAAM;AACJC,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AADR,QAEFN,QAAQ,EAFZ;AAGAG,IAAAA,OAAO,CAACC,GAAR,CAAY,4CAA4CE,QAAQ,CAACC,IAAjE;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMlC,KAAK,CAACmC,IAAN,CAAW,aAAX,EAA0BX,KAA1B,EAAiC;AACtDY,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASL,QAAQ,CAACM,KAAM;AADjC;AAD6C,KAAjC,CAAvB;AAKAT,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEvB,oBAAR;AAA8BwB,MAAAA,OAAO,EAAEM,IAAI,CAACV;AAA5C,KAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE1B;AAAR,KAAD,CAAR;AACAsC,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACD,GAfD,CAeE,OAAOC,KAAP,EAAc;AACdhB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEzB,iBADC;AAEP0B,MAAAA,OAAO,EACLa,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CA1BM,C,CA4BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Axios from \"axios\";\nimport { CART_EMPTY } from \"../constants/cartConstants\";\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_MINE_LIST_REQUEST,\n  ORDER_MINE_LIST_FAIL,\n  ORDER_MINE_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELETE_REQUEST,\n  ORDER_DELETE_SUCCESS,\n  ORDER_DELETE_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n} from \"../constants/orderConstants\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\n  try {\n    console.log(\"orderAction.js createOrder 1\");\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    console.log(\"orderAction.js createOrder 2 userInfo: \" + userInfo.name);\n    const { data } = await Axios.post(\"/api/orders\", order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n    console.log(\"orderAction.js createOrder 3\");\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\n    dispatch({ type: CART_EMPTY });\n    localStorage.removeItem(\"cartItems\");\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// export const detailsOrder = (orderId) => async (dispatch, getState) => {\n//   dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.get(`/api/orders/${orderId}`, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\n//   }\n// };\n\n// export const payOrder = (order, paymentResult) => async (\n//   dispatch,\n//   getState\n// ) => {\n//   dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_PAY_FAIL, payload: message });\n//   }\n// };\n// export const listOrderMine = () => async (dispatch, getState) => {\n//   dispatch({ type: ORDER_MINE_LIST_REQUEST });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.get(\"/api/orders/mine\", {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     });\n//     dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_MINE_LIST_FAIL, payload: message });\n//   }\n// };\n// export const listOrders = ({ seller = \"\" }) => async (dispatch, getState) => {\n//   dispatch({ type: ORDER_LIST_REQUEST });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.get(`/api/orders?seller=${seller}`, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     console.log(data);\n//     dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_LIST_FAIL, payload: message });\n//   }\n// };\n// export const deleteOrder = (orderId) => async (dispatch, getState) => {\n//   dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = Axios.delete(`/api/orders/${orderId}`, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: ORDER_DELETE_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_DELETE_FAIL, payload: message });\n//   }\n// };\n\n// export const deliverOrder = (orderId) => async (dispatch, getState) => {\n//   dispatch({ type: ORDER_DELIVER_REQUEST, payload: orderId });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = Axios.put(\n//       `/api/orders/${orderId}/deliver`,\n//       {},\n//       {\n//         headers: { Authorization: `Bearer ${userInfo.token}` },\n//       }\n//     );\n//     dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_DELIVER_FAIL, payload: message });\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}