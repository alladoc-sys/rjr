{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../constants/userConstants\";\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    paylaod: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"cartItems\");\n  localStorage.removeItem(\"shippingAddress\");\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/users/profile`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/AL_PROJECTS/JAVASCRIPT/amazonal/frontend/src/actions/userActions.js"],"names":["Axios","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","register","name","email","password","dispatch","type","paylaod","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","signin","signout","removeItem","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorization","token","updateUserProfile","user","put","USER_UPDATE_PROFILE_FAIL"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport {\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_SIGNIN_FAIL,\r\n  USER_SIGNIN_REQUEST,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_SIGNOUT,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_REGISTER_REQUEST, paylaod: { email, password } });\r\n  try {\r\n    const { data } = await Axios.post(\"/api/users/register\", {\r\n      name,\r\n      email,\r\n      password,\r\n    });\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const signin = (email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\r\n  try {\r\n    const { data } = await Axios.post(\"/api/users/signin\", { email, password });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_SIGNIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const signout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  localStorage.removeItem(\"cartItems\");\r\n  localStorage.removeItem(\"shippingAddress\");\r\n  dispatch({ type: USER_SIGNOUT });\r\n};\r\n\r\nexport const detailsUser = (userId) => async (dispatch, getState) => {\r\n  dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.get(`/api/users/${userId}`, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: USER_DETAILS_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.put(`/api/users/profile`, user, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message });\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}