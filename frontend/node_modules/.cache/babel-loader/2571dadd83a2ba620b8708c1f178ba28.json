{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartContants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product); // console.log(\"cartReducer existItem: \");\n      // console.log(existItem ? true : false);\n\n      console.log(\"cartReducers.js cartReducer ===>>\");\n\n      if (existItem) {\n        // console.log(\"cartReducer  item.qty eee: \" + item.qty);\n        // state.cartItems.map((x) =>\n        //   console.log(x.product === existItem.product)\n        // );\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        // console.log(\"cartReducer NOT existItem: \" + item);\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/AL_PROJECTS/JAVASCRIPT/amazonal/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","console","log","map","filter"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,2BAAhD;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,aAAL;AACE,YAAMO,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB,CAFF,CAGE;AACA;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;;AAEA,UAAIL,SAAJ,EAAe;AACb;AACA;AACA;AACA;AAEA,eAAO,EACL,GAAGN,KADE;AAELC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBW,GAAhB,CAAqBJ,CAAD,IAC7BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CADhC;AAFN,SAAP;AAMD,OAZD,MAYO;AACL;AACA,eAAO,EAAE,GAAGR,KAAL;AAAYC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAAvB,SAAP;AACD;;AACD,SAAKN,gBAAL;AACE,aAAO,EAAC,GAAGE,KAAJ;AAAWC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBY,MAAhB,CAAwBL,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAlD;AAAtB,OAAP;;AACJ;AACE,aAAOL,KAAP;AA3BJ;AA6BD,CA9BM","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartContants\";\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n      // console.log(\"cartReducer existItem: \");\r\n      // console.log(existItem ? true : false);\r\n      console.log(\"cartReducers.js cartReducer ===>>\");\r\n\r\n      if (existItem) {\r\n        // console.log(\"cartReducer  item.qty eee: \" + item.qty);\r\n        // state.cartItems.map((x) =>\r\n        //   console.log(x.product === existItem.product)\r\n        // );\r\n\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        // console.log(\"cartReducer NOT existItem: \" + item);\r\n        return { ...state, cartItems: [...state.cartItems, item] };\r\n      }\r\n      case CART_REMOVE_ITEM:\r\n        return {...state, cartItems: state.cartItems.filter( x => x.product !== action.payload)}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}